import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import {
  useAccountBalance,
  useAssetBalance,
  usePolkadotExtension,
  useSystemProperties,
  useBlockSyncError,
} from '@substra-hooks/core';
import { useEffect } from 'react';
import Link from 'next/link';
import {
  ConnectAccountModal,
  selectedAccountSelector,
  toggleAccountSelectionModalSelector,
  useAccountModalStore,
  useSelectedAccountsStore,
  selectedWalletSelector,
  useWalletsStore,
  ACCOUNT_MODAL_STEPS,
} from '@rmrk-team/dotsama-wallet-react';
import { Box, Button } from '@chakra-ui/react';

const shortenAccountName = (name: string, sliceSize: number = 6) => {
  if (name) {
    const beginning = name.slice(0, sliceSize);

    return `${beginning}${name.length > sliceSize ? '...' : ''}`;
  }

  return '';
};

const Home: NextPage = () => {
  const blockSyncError = useBlockSyncError('development');

  // console.log('systemProperties', systemProperties);

  // useEffect(() => {
  //   if (!w3Enabled) {
  //     w3enable();
  //   }
  //   if (initialised && !w3Enabled) {
  //     console.log('polkadot.js is disabled');
  //   }
  //   console.log('initialised', initialised);
  // }, [w3Enabled, initialised]);
  //
  // console.log('accounts', accounts);
  //
  // console.log('balancePayload', balancePayload);

  // console.log('assetPayload', assetPayload);

  const selectedAccount = useSelectedAccountsStore(selectedAccountSelector);
  const toggleAccountSelectionModal = useAccountModalStore(toggleAccountSelectionModalSelector);
  const selectedWallet = useWalletsStore(selectedWalletSelector);
  const openSubstrateAccountsModal = () => {
    toggleAccountSelectionModal(true, selectedWallet ? ACCOUNT_MODAL_STEPS.accounts : undefined);
  };
  const accountCopy = selectedAccount?.name || selectedAccount?.address;

  const balancePayload = useAccountBalance(selectedAccount?.address as string);
  const assetPayload = useAssetBalance(selectedAccount?.address as string, 8, 'statemine');
  const systemProperties = useSystemProperties();

  return (
    <Box>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <ConnectAccountModal />

        <Box my={4}>
          <Button onClick={openSubstrateAccountsModal} size={'lg'}>
            {selectedAccount ? shortenAccountName(accountCopy || '', 18) : 'Connect wallet'}
          </Button>
        </Box>
        {blockSyncError && (
          <div style={{ color: 'red' }}>
            <div>Block sync error:</div>
            <div>{JSON.stringify(blockSyncError, null, 2)}</div>
            <br />
          </div>
        )}
        <div>Balance: {balancePayload?.balance.formatted}</div>
        <div>Locked Balance: {balancePayload && balancePayload?.locked?.formatted}</div>
        <div>Reserved Balance: {balancePayload?.reserved?.formatted}</div>
        <div>Total Balance: {balancePayload?.total?.formatted}</div>
        <div>Available Balance: {balancePayload?.available?.formatted}</div>

        <br />
        <div>Asset balance: {assetPayload?.balance.formatted}</div>

        <br />
        <Link href={'/page-two'}>Page two</Link>
      </main>
    </Box>
  );
};

export default Home;
